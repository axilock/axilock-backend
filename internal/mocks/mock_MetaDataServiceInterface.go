// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	metadata "github.com/axilock/axilock-backend/internal/service/metadata"
	mock "github.com/stretchr/testify/mock"
)

// MetaDataServiceInterface is an autogenerated mock type for the MetaDataServiceInterface type
type MetaDataServiceInterface struct {
	mock.Mock
}

type MetaDataServiceInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MetaDataServiceInterface) EXPECT() *MetaDataServiceInterface_Expecter {
	return &MetaDataServiceInterface_Expecter{mock: &_m.Mock}
}

// CreateMetadata provides a mock function with given fields: ctx, req
func (_m *MetaDataServiceInterface) CreateMetadata(ctx context.Context, req metadata.CreatetMetaDataReq) error {
	ret := _m.Called(ctx, req)

	if len(ret) == 0 {
		panic("no return value specified for CreateMetadata")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, metadata.CreatetMetaDataReq) error); ok {
		r0 = rf(ctx, req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MetaDataServiceInterface_CreateMetadata_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateMetadata'
type MetaDataServiceInterface_CreateMetadata_Call struct {
	*mock.Call
}

// CreateMetadata is a helper method to define mock.On call
//   - ctx context.Context
//   - req metadata.CreatetMetaDataReq
func (_e *MetaDataServiceInterface_Expecter) CreateMetadata(ctx interface{}, req interface{}) *MetaDataServiceInterface_CreateMetadata_Call {
	return &MetaDataServiceInterface_CreateMetadata_Call{Call: _e.mock.On("CreateMetadata", ctx, req)}
}

func (_c *MetaDataServiceInterface_CreateMetadata_Call) Run(run func(ctx context.Context, req metadata.CreatetMetaDataReq)) *MetaDataServiceInterface_CreateMetadata_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(metadata.CreatetMetaDataReq))
	})
	return _c
}

func (_c *MetaDataServiceInterface_CreateMetadata_Call) Return(_a0 error) *MetaDataServiceInterface_CreateMetadata_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MetaDataServiceInterface_CreateMetadata_Call) RunAndReturn(run func(context.Context, metadata.CreatetMetaDataReq) error) *MetaDataServiceInterface_CreateMetadata_Call {
	_c.Call.Return(run)
	return _c
}

// NewMetaDataServiceInterface creates a new instance of MetaDataServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMetaDataServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MetaDataServiceInterface {
	mock := &MetaDataServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
